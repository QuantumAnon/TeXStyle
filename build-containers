#!/usr/bin/env bash
# build-containers
# builds the necessary containers for the texstyle package

notify () {
    echo \
"################################################################################"
    echo "$1"
}

warn () {
    echo "WARNING: $1"
}

# build configuration file, see README for the variables it should define
if [ -s ".build-config" ]; then
   source ".build-config"
else
    warn ".build-config not found or empty .build config"
    exit 1
fi

# mounts a local CTAN repository
ctan-mount () {
    local mnt="$1"

    if [ -n "${CTANDIR}" ]; then
        # make the mountpoint for the local CTAN mirror
        mkdir -p "${mnt}/home/texlive-local"
        mount --bind "${CTANDIR}" "${mnt}/home/texlive-local"
    fi
}

ctan-umount () {
    local mnt="$1"

    if [ -n "${CTANDIR}" ]; then
        # unmount the local CTAN mirror
        umount "${mnt}/home/texlive-local"
    fi
}

# performs a texlive installation
install-texlive () {
    local ctr="$1"
    local mnt="$2"
    local profile="$3"
    local brunch="buildah run --net host $ctr /bin/sh -c"

    # install base packages
    $brunch 'apk add make wget perl tar gzip git'

    # get and unpack the texlive installer
    if [ -n "${LOCAL_INST}" ]; then
        cp "${TEXLIVE_INST}" "$mnt/home/"
    else
        $brunch "wget \"${TEXLIVE_INST}\" -O home/install-tl-unx.tar.gz"
    fi

    $brunch "cd home; tar -xf install-tl-unx.tar.gz"

    # directory into which the installer was unpacked
    local texlivedir="$($brunch "cd home; tar --exclude='*/*' -tf install-tl-unx.tar.gz")"

    # copy the install profile into the unpacked directory
    cp "${profile}" "${mnt}/home/${texlivedir}/texlive.profile"

    ctan-mount "${mnt}"

    notify "installing texlive"
    $brunch "cd home/${texlivedir}; ./install-tl $REPO_FLAG \
-profile=texlive.profile"
    notify "texlive install complete"

    $brunch "rm -rf home/${texlivedir}"

    ctan-umount "${mnt}"
}

texlive-medium () {
    # create and mount containers
    local ctr=$(buildah from alpine)
    local mnt=$(buildah mount $ctr)
    # convenience command
    local brunch="buildah run --net host $ctr /bin/sh -c"

    install-texlive "${ctr}" "${mnt}" "profiles/medium"

    # commit the new container and remove it
    buildah commit $ctr "localhost/texlive-medium"
    buildah umount $ctr
    buildah rm $ctr
}

texlive-minimal () {
    # create and mount containers
    local ctr=$(buildah from alpine)
    local mnt=$(buildah mount $ctr)
    # convenience command
    local brunch="buildah run --net host $ctr /bin/sh -c"

    install-texlive "${ctr}" "${mnt}" "profiles/minimal"

    # commit the new container and remove it
    buildah commit $ctr "localhost/texlive-minimal"
    buildah umount $ctr
    buildah rm $ctr
}

build_test-container () {
    local ctr=$(buildah from localhost/texlive-minimal)
    local mnt=$(buildah mount $ctr)
    brunch="buildah run --net host $ctr /bin/sh -c"

    ctan-mount "${mnt}"

    # install chktex and docstrip
    $brunch "tlmgr install $REPO_FLAG docstrip chktex"

    ctan-umount "${mnt}"

    # commit the new container and remove it
    buildah commit $ctr "${REGISTRY_DOMAIN}/build_test-container"
    buildah umount $ctr
    buildah rm $ctr
}

test-container () {
    local ctr=$(buildah from localhost/texlive-minimal)
    local mnt=$(buildah mount $ctr)
    brunch="buildah run --net host $ctr /bin/sh -c"

    ctan-mount "${mnt}"

    # install chktex
    $brunch "tlmgr install $REPO_FLAG chktex"

    ctan-umount "${mnt}"

    # commit the new container and remove it
    buildah commit $ctr "${REGISTRY_DOMAIN}/test-container"
    buildah umount $ctr
    buildah rm $ctr
}

texstyle-container () {
    ctr=$(buildah from "localhost/texlive-medium")
    mnt=$(buildah mount $ctr)
    brunch="buildah run --net host $ctr /bin/sh -c"

    ctan-mount "${mnt}"

    # install any additional packages
    $brunch "tlmgr install $REPO_FLAG \
lipsum bbm bbm-macros mdframed zref needspace enumitem"

    ctan-umount "${mnt}"

    # commit the new container and remove it
    buildah commit $ctr "${REGISTRY_DOMAIN}/texstyle-container"
    buildah umount $ctr
    buildah rm $ctr
}

packaging-container () {
    # make a container for packaging
    local ctr=$(buildah from alpine)
    buildah run --net host $ctr /bin/sh -c 'apk add zip tar make'
    buildah commit $ctr "${REGISTRY_DOMAIN}/packaging-container"
    buildah rm $ctr
}

texlive-medium
texstyle-container
texlive-minimal
 test-container
build-test-container
packaging-container

# podman login "${REGISTRY}" -u "${REGISTRY_USERNAME}" -p "${REGISTRY_TOKEN}"
# buildah push "${REGISTRY_DOMAIN}/test-container"
# buildah push "${REGISTRY_DOMAIN}/texstyle-container"
# buildah push "${REGISTRY_DOMAIN}/packaging-container"
